<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Simple PWA Demo</title>
  <link rel="manifest" href="manifest.json">
</head>
<body>
  <h1>Static Images</h1>
  <img src="images/img1.jpg" width="200" alt="Image 1">
  <img src="images/img2.jpg" width="200" alt="Image 2">
  <img src="images/img3.jpg" width="200" alt="Image 3">

  <script>
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('serviceworker.js')
        .then(reg => console.log("SW registered:", reg.scope))
        .catch(err => console.log("SW registration failed:", err));
    }
  </script>
</body>
</html>

{
  "name": "Simple PWA Demo",
  "short_name": "PWA Demo",
  "start_url": "index.html",
  "display": "standalone",
  "background_color": "#ffffff",
  "theme_color": "#ffffff",
  "icons": [
    {
      "src": "images/img1.jpg",
      "sizes": "192x192",
      "type": "image/jpeg"
    }
  ]
}

const CACHE_NAME = 'pwa-demo-cache-v1';
const FILES_TO_CACHE = [
  '/',
  '/index.html',
  '/manifest.json',
  '/images/img1.jpg',
  '/images/img2.jpg',
  '/images/img3.jpg'
];

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(FILES_TO_CACHE))
  );
});

self.addEventListener('fetch', event => {
  event.respondWith(
    caches.match(event.request).then(response => response || fetch(event.request))
  );
});
